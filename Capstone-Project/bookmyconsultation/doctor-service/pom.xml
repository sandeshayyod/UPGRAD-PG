<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.upgrad</groupId>
        <artifactId>bookmyconsultation</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>doctor-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>doctor-service</name>
    <description>Service for doctor onboarding</description>
    <properties>
        <aws-java-sdk.version>1.12.191</aws-java-sdk.version>
    </properties>

    <dependencies>

        <!-- Spring basic caching dependency -->
        <!-- Spring boot mongodb dependency -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Spring support for integrating common third-party libraries -->
        <!-- Spring support for validation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>com.upgrad</groupId>
            <artifactId>bmc-commons</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!-- Kafka client for communication -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- secure way to authenticate users and share information -->
        <!-- one-way password hashing algorithm -->

        <!-- Aspect logging-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>


        <!-- discovery and load balancers -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-loadbalancer</artifactId>
        </dependency>

        <!-- Amazon sdk -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>${aws-java-sdk.version}</version>
        </dependency>

        <!-- service communication -->
        <!-- Messaging capabilities-->
        <!-- Amazon Simple Email Service -->
        <!--convert JSON to and from POJO-->
        <!--convert java objects to and from xml-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
        <finalName>doctor-service</finalName>
    </build>

</project>
